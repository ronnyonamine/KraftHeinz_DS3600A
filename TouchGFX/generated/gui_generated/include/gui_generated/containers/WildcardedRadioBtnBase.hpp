/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef WILDCARDEDRADIOBTNBASE_HPP
#define WILDCARDEDRADIOBTNBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>

class WildcardedRadioBtnBase : public touchgfx::Container
{
public:
    WildcardedRadioBtnBase();
    virtual ~WildcardedRadioBtnBase() {}
    virtual void initialize();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box boxBackGnd;
    touchgfx::TextAreaWithOneWildcard textRadioBtnInactive;
    touchgfx::TextAreaWithOneWildcard textRadioBtnActive;
    touchgfx::Image imgRadioBtn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTRADIOBTNINACTIVE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textRadioBtnInactiveBuffer[TEXTRADIOBTNINACTIVE_SIZE];
    static const uint16_t TEXTRADIOBTNACTIVE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textRadioBtnActiveBuffer[TEXTRADIOBTNACTIVE_SIZE];

private:

};

#endif // WILDCARDEDRADIOBTNBASE_HPP
