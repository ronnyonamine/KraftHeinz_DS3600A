#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_RobotoCondensed_Bold_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE =
{
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0020,  ], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0050, -4 },  // (First char = [0x0050, P], Second char = [0x002E, .], Kerning dist = -4)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x002E, .], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002E, .], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x002E, .], Kerning dist = -2)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x002E, .], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x002E, .], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x002E, .], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0020, -1 },  // (First char = [0x0020,  ], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -2)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0076, v], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -1)
};
