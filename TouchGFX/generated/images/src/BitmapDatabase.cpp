// 4.14.0 0x44fb780f
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_barcode[]; // BITMAP_BARCODE_ID = 0, Size: 40x40 pixels
extern const unsigned char image_barcode_active[]; // BITMAP_BARCODE_ACTIVE_ID = 1, Size: 40x40 pixels
extern const unsigned char image_batchon[]; // BITMAP_BATCHON_ID = 2, Size: 32x32 pixels
extern const unsigned char image_battery_high[]; // BITMAP_BATTERY_HIGH_ID = 3, Size: 32x32 pixels
extern const unsigned char image_battery_high3x[]; // BITMAP_BATTERY_HIGH3X_ID = 4, Size: 96x96 pixels
extern const unsigned char image_battery_high5x[]; // BITMAP_BATTERY_HIGH5X_ID = 5, Size: 69x141 pixels
extern const unsigned char image_battery_high_eol[]; // BITMAP_BATTERY_HIGH_EOL_ID = 6, Size: 32x32 pixels
extern const unsigned char image_battery_low[]; // BITMAP_BATTERY_LOW_ID = 7, Size: 32x32 pixels
extern const unsigned char image_battery_low3x[]; // BITMAP_BATTERY_LOW3X_ID = 8, Size: 96x96 pixels
extern const unsigned char image_battery_low5x[]; // BITMAP_BATTERY_LOW5X_ID = 9, Size: 70x139 pixels
extern const unsigned char image_battery_low_eol[]; // BITMAP_BATTERY_LOW_EOL_ID = 10, Size: 32x32 pixels
extern const unsigned char image_battery_med[]; // BITMAP_BATTERY_MED_ID = 11, Size: 32x32 pixels
extern const unsigned char image_battery_med3x[]; // BITMAP_BATTERY_MED3X_ID = 12, Size: 96x96 pixels
extern const unsigned char image_battery_med5x[]; // BITMAP_BATTERY_MED5X_ID = 13, Size: 70x141 pixels
extern const unsigned char image_battery_med_eol[]; // BITMAP_BATTERY_MED_EOL_ID = 14, Size: 32x32 pixels
extern const unsigned char image_battery_med_high[]; // BITMAP_BATTERY_MED_HIGH_ID = 15, Size: 32x32 pixels
extern const unsigned char image_battery_med_high3x[]; // BITMAP_BATTERY_MED_HIGH3X_ID = 16, Size: 96x96 pixels
extern const unsigned char image_battery_med_high5x[]; // BITMAP_BATTERY_MED_HIGH5X_ID = 17, Size: 70x140 pixels
extern const unsigned char image_battery_med_high_eol[]; // BITMAP_BATTERY_MED_HIGH_EOL_ID = 18, Size: 32x32 pixels
extern const unsigned char image_battery_med_low[]; // BITMAP_BATTERY_MED_LOW_ID = 19, Size: 32x32 pixels
extern const unsigned char image_battery_med_low3x[]; // BITMAP_BATTERY_MED_LOW3X_ID = 20, Size: 96x96 pixels
extern const unsigned char image_battery_med_low5x[]; // BITMAP_BATTERY_MED_LOW5X_ID = 21, Size: 70x140 pixels
extern const unsigned char image_battery_med_low_eol[]; // BITMAP_BATTERY_MED_LOW_EOL_ID = 22, Size: 32x32 pixels
extern const unsigned char image_blue_progressindicators_bg_large_progress_indicator_bg_square_0_degrees[]; // BITMAP_BLUE_PROGRESSINDICATORS_BG_LARGE_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID = 23, Size: 320x10 pixels
extern const unsigned char image_blue_progressindicators_bg_medium_progress_indicator_bg_square_0_degrees[]; // BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID = 24, Size: 184x20 pixels
extern const unsigned char image_bluetooth_alt[]; // BITMAP_BLUETOOTH_ALT_ID = 25, Size: 32x32 pixels
extern const unsigned char image_bluetooth_alt_active[]; // BITMAP_BLUETOOTH_ALT_ACTIVE_ID = 26, Size: 32x32 pixels
extern const unsigned char image_check[]; // BITMAP_CHECK_ID = 27, Size: 40x40 pixels
extern const unsigned char image_check_active[]; // BITMAP_CHECK_ACTIVE_ID = 28, Size: 40x40 pixels
extern const unsigned char image_down[]; // BITMAP_DOWN_ID = 29, Size: 32x32 pixels
extern const unsigned char image_exclamation[]; // BITMAP_EXCLAMATION_ID = 30, Size: 40x40 pixels
extern const unsigned char image_exclamation_active[]; // BITMAP_EXCLAMATION_ACTIVE_ID = 31, Size: 40x40 pixels
extern const unsigned char image_focusradiooff[]; // BITMAP_FOCUSRADIOOFF_ID = 32, Size: 32x32 pixels
extern const unsigned char image_focusradioon[]; // BITMAP_FOCUSRADIOON_ID = 33, Size: 32x32 pixels
extern const unsigned char image_home[]; // BITMAP_HOME_ID = 34, Size: 32x32 pixels
extern const unsigned char image_left[]; // BITMAP_LEFT_ID = 35, Size: 32x32 pixels
extern const unsigned char image_location_active[]; // BITMAP_LOCATION_ACTIVE_ID = 36, Size: 32x32 pixels
extern const unsigned char image_location_hover[]; // BITMAP_LOCATION_HOVER_ID = 37, Size: 32x32 pixels
extern const unsigned char image_location_on[]; // BITMAP_LOCATION_ON_ID = 38, Size: 32x32 pixels
extern const unsigned char image_mdi_arrow_back[]; // BITMAP_MDI_ARROW_BACK_ID = 39, Size: 32x32 pixels
extern const unsigned char image_mdi_arrow_back_selected[]; // BITMAP_MDI_ARROW_BACK_SELECTED_ID = 40, Size: 32x32 pixels
extern const unsigned char image_minus[]; // BITMAP_MINUS_ID = 41, Size: 40x40 pixels
extern const unsigned char image_minus_active[]; // BITMAP_MINUS_ACTIVE_ID = 42, Size: 40x40 pixels
extern const unsigned char image_nonbattery[]; // BITMAP_NONBATTERY_ID = 43, Size: 32x32 pixels
extern const unsigned char image_preview[]; // BITMAP_PREVIEW_ID = 44, Size: 256x192 pixels
extern const unsigned char image_radiooff[]; // BITMAP_RADIOOFF_ID = 45, Size: 32x32 pixels
extern const unsigned char image_radioon[]; // BITMAP_RADIOON_ID = 46, Size: 32x32 pixels
extern const unsigned char image_right[]; // BITMAP_RIGHT_ID = 47, Size: 32x32 pixels
extern const unsigned char image_shiftblue[]; // BITMAP_SHIFTBLUE_ID = 48, Size: 44x32 pixels
extern const unsigned char image_shiftgreen[]; // BITMAP_SHIFTGREEN_ID = 49, Size: 44x32 pixels
extern const unsigned char image_splashlight[]; // BITMAP_SPLASHLIGHT_ID = 50, Size: 320x240 pixels
extern const unsigned char image_up[]; // BITMAP_UP_ID = 51, Size: 32x32 pixels
extern const unsigned char image_white_dot_official[]; // BITMAP_WHITE_DOT_OFFICIAL_ID = 52, Size: 8x8 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_barcode, 0, 40, 40, 29, 10, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_barcode_active, 0, 40, 40, 29, 10, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_batchon, 0, 32, 32, 9, 13, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_high, 0, 32, 32, 9, 6, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 22, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_high3x, 0, 96, 96, 28, 17, 40, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 70, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_high5x, 0, 69, 141, 0, 20, 68, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 116, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_high_eol, 0, 32, 32, 7, 6, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_low, 0, 32, 32, 9, 6, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 23, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_low3x, 0, 96, 96, 28, 17, 40, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 71, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_low5x, 0, 70, 139, 1, 19, 68, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 117, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_low_eol, 0, 32, 32, 7, 5, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 25, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med, 0, 32, 32, 9, 6, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 23, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med3x, 0, 96, 96, 28, 17, 40, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 71, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med5x, 0, 70, 141, 1, 20, 68, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 117, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med_eol, 0, 32, 32, 7, 5, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 25, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med_high, 0, 32, 32, 9, 6, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 23, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med_high3x, 0, 96, 96, 28, 17, 40, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 71, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med_high5x, 0, 70, 140, 1, 20, 68, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 117, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med_high_eol, 0, 32, 32, 7, 5, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 25, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med_low, 0, 32, 32, 9, 6, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 23, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med_low3x, 0, 96, 96, 28, 17, 40, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 71, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med_low5x, 0, 70, 140, 1, 19, 68, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 117, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_med_low_eol, 0, 32, 32, 7, 5, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 25, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_progressindicators_bg_large_progress_indicator_bg_square_0_degrees, 0, 320, 10, 0, 0, 320, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 10, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_blue_progressindicators_bg_medium_progress_indicator_bg_square_0_degrees, 0, 184, 20, 0, 0, 184, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 20, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_bluetooth_alt, 0, 32, 32, 22, 8, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_bluetooth_alt_active, 0, 32, 32, 22, 8, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_check, 0, 40, 40, 13, 8, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_check_active, 0, 40, 40, 13, 8, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_down, 0, 32, 32, 9, 10, 13, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_exclamation, 0, 40, 40, 22, 12, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_exclamation_active, 0, 40, 40, 22, 12, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_focusradiooff, 0, 32, 32, 27, 13, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_focusradioon, 0, 32, 32, 12, 11, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_home, 0, 32, 32, 9, 13, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_left, 0, 32, 32, 13, 11, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_location_active, 0, 32, 32, 11, 16, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 7, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_location_hover, 0, 32, 32, 11, 16, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 7, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_location_on, 0, 32, 32, 11, 16, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 7, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_mdi_arrow_back, 0, 32, 32, 7, 15, 19, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_mdi_arrow_back_selected, 0, 32, 32, 0, 0, 32, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 32, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_minus, 0, 40, 40, 12, 9, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_minus_active, 0, 40, 40, 12, 9, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_nonbattery, 0, 32, 32, 0, 0, 32, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 32, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_preview, 0, 256, 192, 0, 0, 256, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 192, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_radiooff, 0, 32, 32, 27, 13, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_radioon, 0, 32, 32, 12, 11, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_right, 0, 32, 32, 11, 11, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_shiftblue, 0, 44, 32, 5, 4, 34, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_shiftgreen, 0, 44, 32, 5, 4, 34, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_splashlight, 0, 320, 240, 0, 0, 320, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 240, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_up, 0, 32, 32, 9, 15, 13, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_white_dot_official, 0, 8, 8, 2, 1, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
